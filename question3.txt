3. Explain JavaScript's dynamic typing and the typeof operator with examples.
=> JavaScript is a dynamically typed language, which means that variables do not have a fixed type. 
Instead, the type of a variable can change at runtime based on the value assigned to it. 
This flexibility allows developers to write more generic and reusable code but can also lead to unexpected behaviors if types are not managed carefully.
In JavaScript, you can assign a value of any type to a variable, and you can change that value to a different type at any time. 

Here are some examples:-

    let myVar = 42;        // myVar is a number
    console.log(myVar);    // Output: 42

    myVar = "Hello";       // Now myVar is a string
    console.log(myVar);    // Output: "Hello"

    myVar = true;          // Now myVar is a boolean
    console.log(myVar);    // Output: true

The typeof Operator:- The typeof operator is used to determine the type of a variable. 
It returns a string indicating the type of the unevaluated operand. 

Here are some examples:-

    console.log(typeof 42);                 // "number"
    console.log(typeof "Hello");            // "string"
    console.log(typeof true);               // "boolean"
    console.log(typeof undefined);          // "undefined"
    console.log(typeof null);               // "object" (this is a known quirk in JavaScript)
    console.log(typeof {});                 // "object"
    console.log(typeof []);                 // "object" (arrays are a type of object in JavaScript)
    console.log(typeof function(){});       // "function"
    console.log(typeof Symbol("id"));       // "symbol"
    console.log(typeof 9007199254740991n);  // "bigint"
